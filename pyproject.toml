[tool.poetry]
name = "mlflow_for_ml_dev"
version = "1.4.2"
description = "Code examples for the youtube playlist 'MLflow for Machine Learning Development' by Manuel Gil"
authors = ["Manuel Gil <manuelgilsitio@gmail.com>"]
readme = "README.md"
maintainers = ["Manuel Gil <manuelgilsitio@gmail.com>"]
repository = "https://github.com/manuelgilm/mlflow_for_ml_dev"
license = "MIT"
keywords = ["mlflow", "machine learning", "development", "youtube", "tutorial"]
classifiers = [
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
include = [
    { path = "mlflow_for_ml_dev/notebooks", format = ["sdist", "wheel"] },
    { path = "mlflow_for_ml_dev", format=["sdist", "wheel"]}
]

[tool.poetry.dependencies]
python = "^3.11"
mlflow = "2.20.1"
xgboost = "^2.0.3"
shap = "0.46.0"
pynvml = "^12.0.0"
seaborn = "^0.13.2"
ucimlrepo = "^0.0.7"
keras = "^3.8.0"
torch = "^2.6.0"

[tool.poetry.group.dev.dependencies]
ipython = "^8.32.0"
jupyter = "^1.1.1"


[tool.poetry.scripts]
log_sklearn_model = 'examples.student_performance.entrypoint:log_sklearn_pipeline'
inference_student_performance = 'examples.student_performance.entrypoint:student_performance_inference'

train_multi_model = 'examples.multi_model.entrypoint:train_multi_model'
inference_multimodel = 'examples.multi_model.entrypoint:inference_multimodel'

iris_clf_train ="examples.iris_classifier.train:main"
iris_clf_inference = "examples.iris_classifier.inference:main"
iris_clf_online_inference="examples.iris_classifier.online_inference:main"

digit_recog_train = "examples.digit_recognition.train:main"
digit_recog_inference = "examples.digit_recognition.inference:main"
digit_recog_online_inference = "examples.digit_recognition.online_inference:main"

walmart_reg_train = "examples.walmart_sales_regression.train:main"
walmart_reg_inference = "examples.walmart_sales_regression.inference:main"
walmart_reg_online_inference = "examples.walmart_sales_regression.online_inference:main"

diabetes_pred_train = "examples.diabetes_prediction.train:main"
diabetes_pred_inference = "examples.diabetes_prediction.inference:main"
diabetes_pred_online_inferece = "examples.diabetes_prediction.online_inference:main"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"